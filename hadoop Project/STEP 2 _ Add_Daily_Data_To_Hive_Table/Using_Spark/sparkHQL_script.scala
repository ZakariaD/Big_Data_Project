										/*** ***** MSC BIG DATA --- Big Data Project --- DAHANI ZAKARIA ----- ***** ***/

/**** In the Cloudera Terminal ***********/


/*** Login to your spark server(s) and copy the running hive-site.xml to spark:***//

cp /etc/hive/conf/hive-site.xml /etc/spark/conf/

/****Start your spark shell with (replace <CDH_VERSION> with your parcel version***/ 
/**
	
spark-shell --master yarn-client --driver-class-path "/opt/cloudera/parcels/CDH-<CDH_VERSION>/lib/hive/lib/*" --conf spark.executor.extraClassPath="/opt/cloudera/parcels/CDH-<CDH_VERSION>/lib/hive/lib/*" 	

**/

cat /usr/lib/hadoop/cloudera/cdh_version.properties

/*** 
# Autogenerated build properties
version=2.6.0-cdh5.8.0
....
***/

spark-shell --master yarn-client --driver-class-path "/opt/cloudera/parcels/CDH-2.6.0-cdh5.8.0/lib/hive/lib/*" --conf spark.executor.extraClassPath="/opt/cloudera/parcels/CDH-2.6.0-cdh5.8.0/lib/hive/lib/*" 

scala> import org.apache.spark.sql.hive.HiveContext

scala> val sqlContext = new HiveContext(sc)

scala> sqlContext.sql("USE big_data_project")

scala> sqlContext.sql("SELECT * FROM gasdata limit 2").collect().foreach(println) // Testing

scala> sqlContext.sql("CREATE TABLE dailyData(d_data String)")

scala> sqlContext.sql("LOAD DATA LOCAL INPATH '/home/cloudera/Desktop/BigDataProject/XMLData/dailyData/formattedDailyData.xml'  INTO table dailyData")

scala> sqlContext.sql("INSERT OVERWRITE TABLE GasData SELECT " +
     | "xpath_int(d_data, 'pdv/@id'), " +
     | "xpath_int(d_data, 'pdv/@latitude'),"+
     | "xpath_int(d_data, 'pdv/@longitude'),"+
     | "xpath_int(d_data, 'pdv/@cp'),"+
     | "xpath_string(d_data, 'pdv/@pop'),"+
     | "xpath_string(d_data, 'pdv/prix/@nom'),"+
     | "xpath_int(d_data, 'pdv/prix/@id'),"+
     | "xpath_string(d_data, 'pdv/prix/@maj'),"+
     | "xpath_int(d_data, 'pdv/prix/@valeur') from dailydata")

scala> sqlContext.sql("TRUNCATE TABLE dailyData")




